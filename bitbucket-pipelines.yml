options:
  docker: true
  size: 2x

definitions:
  services:
    docker:
      memory: 4096
    postgres:
      image: postgres
      environment:
        POSTGRES_DB: test_xapi_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: xapiserver

  steps:
    - step: &npm-install-and-test
        name: '⚡ npm install and test'
        image: node:16
        services:
          - postgres
          - docker
        size: 2x
        script:
          - export HUSKY=0
          - npm i
          - curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose
          - chmod +x /usr/local/bin/docker-compose
          - docker-compose -f docker-compose.test.yml up -d
          - npm run test:codecov
          - docker-compose -f docker-compose.test.yml down
        artifacts:
          - node_modules/**/*
        caches:
          - node
          - docker

    - step: &commitlint
        name: '📝 conventional commits check'
        image: node:16
        script:
          - /bin/bash commitlint-pipeline-check.sh

    - step: &npm-build
        name: '⚡ npm build'
        image: node:16-alpine
        script:
          - npm run build
        artifacts:
          - dist/**

    - step: &docker-build-and-run
        name: '🐳 docker build and run'
        services:
          - docker
          - postgres
        script:
          - docker build -t xapi-server .
          # Only one record sender is required for the service to start successfully.
          # The following enables the postgres record sender.
          # We can get fancier later if we want, but this is a good start.
          - docker run --add-host host.docker.internal:$BITBUCKET_DOCKER_HOST_INTERNAL -d --name=check-startup -e XAPI_DATABASE_URL=postgres://postgres:xapiserver@host.docker.internal:5432/test_xapi_db xapi-server && sleep 10 && docker top check-startup

    - step: &version-bump
        name: '🏷️ version bump'
        trigger: 'manual'
        image: node:16
        artifacts:
          - version.txt
        services:
          - docker
        script:
          - npm run release
          - npm run build
          - docker build -t $DOCKER_REPO_NAME .
          - export VERSION_TAG=$(git describe --tags --abbrev=0)
          - echo $VERSION_TAG > ./version.txt
          - pipe: atlassian/aws-ecr-push-image:1.5.0
            variables:
              AWS_DEFAULT_REGION: eu-west-2
              IMAGE_NAME: $DOCKER_REPO_NAME
              TAGS: '$VERSION_TAG alpha'
          # This step will fail if 'master' branch write permissions isn't set to 'everyone'.
          - git push origin master
          - git push origin $VERSION_TAG

    - step: &deploy-to-alpha
        name: '🔔 deploy to alpha'
        script:
          - pipe: atlassian/aws-ecs-deploy:1.6.1
            variables:
              # These AWS values are workspace variables for alpha-dev.
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_ALPHA_OLD
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_ALPHA_OLD
              AWS_DEFAULT_REGION: 'ap-northeast-2'
              CLUSTER_NAME: 'kidsloop-alpha'
              SERVICE_NAME: 'kidsloop-alpha-xapi'
              FORCE_NEW_DEPLOYMENT: 'true'
              WAIT: 'true'
          - VERSION_TAG=$(cat ./version.txt)
          - pipe: docker://cabauman/slack-notify-commits:0.6.0
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: '🚀 A new build of xAPI service ($VERSION_TAG) has been deployed to *alpha*.'
              BITBUCKET_USER: $BITBUCKET_PIPELINE_READER_USER
              BITBUCKET_APP_PASSWORD: $BITBUCKET_PIPELINE_READER_APP_PASSWORD

pipelines:
  pull-requests:
    '**':
      - step: *npm-install-and-test
      - step: *commitlint
      - step: *npm-build
      - step: *docker-build-and-run

  branches:
    master:
      - step: *npm-install-and-test
      - step: *version-bump
      - step: *deploy-to-alpha
